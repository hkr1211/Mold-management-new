# 使用官方 Python 3.11 运行时作为基础镜像
FROM python:3.11

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    STREAMLIT_SERVER_PORT=8501 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0

    FROM python:3.11

# 换源 & 安装依赖
# 替换原来的 RUN 命令为以下内容：
RUN set -eux; \
    # 确保目录存在
    mkdir -p /etc/apt/sources.list.d; \
    # 创建备用源文件
    echo "deb http://deb.debian.org/debian bullseye main" > /etc/apt/sources.list; \
    echo "deb http://security.debian.org/debian-security bullseye-security main" >> /etc/apt/sources.list; \
    # 替换为阿里云源
    sed -i 's|http://deb.debian.org|https://mirrors.aliyun.com|g' /etc/apt/sources.list; \
    sed -i 's|http://security.debian.org|https://mirrors.aliyun.com|g' /etc/apt/sources.list; \
    # 更新并安装依赖
    apt-get update -o Acquire::Check-Valid-Until=false; \
    apt-get install -y --no-install-recommends \
        build-essential \
        libssl-dev \
        # 添加你的其他依赖包
    ; \
    # 清理
    rm -rf /var/lib/apt/lists/*;
# 安装系统依赖
#RUN apt-get update && apt-get install -y \
#    build-essential \
#    libpq-dev \
#    && rm -rf /var/lib/apt/lists/*

# 复制 requirements.txt 并安装 Python 依赖
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 复制应用代码
COPY app/ /app/

# 创建上传目录
RUN mkdir -p /app/uploads

# 暴露端口
EXPOSE 8501

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# 启动命令
CMD ["streamlit", "run", "main.py", "--server.address=0.0.0.0", "--server.port=8501"]