"""Create initial database schema

Revision ID: 196c0ffaa7df
Revises: 
Create Date: 2025-06-19 15:48:51.534621

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '196c0ffaa7df'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('molds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mold_id', sa.String(length=100), nullable=False),
    sa.Column('mold_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('asset_number', sa.String(length=100), nullable=True),
    sa.Column('project_name', sa.String(length=255), nullable=True),
    sa.Column('part_number', sa.String(length=255), nullable=True),
    sa.Column('part_name', sa.String(length=255), nullable=True),
    sa.Column('material', sa.String(length=100), nullable=True),
    sa.Column('cavity_count', sa.Integer(), nullable=True),
    sa.Column('size', sa.String(length=100), nullable=True),
    sa.Column('weight_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('supplier', sa.String(length=255), nullable=True),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('purchase_price', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_shots', sa.Integer(), nullable=True),
    sa.Column('maintenance_cycle_shots', sa.Integer(), nullable=True),
    sa.Column('last_maintenance_shots', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_molds')),
    sa.UniqueConstraint('asset_number', name=op.f('uq_molds_asset_number'))
    )
    with op.batch_alter_table('molds', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_molds_mold_id'), ['mold_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_molds_status'), ['status'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('loan_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mold_id_fk', sa.Integer(), nullable=False),
    sa.Column('user_id_fk', sa.Integer(), nullable=False),
    sa.Column('loan_date', sa.DateTime(), nullable=True),
    sa.Column('expected_return_date', sa.DateTime(), nullable=True),
    sa.Column('actual_return_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('purpose', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mold_id_fk'], ['molds.id'], name=op.f('fk_loan_records_mold_id_fk_molds')),
    sa.ForeignKeyConstraint(['user_id_fk'], ['users.id'], name=op.f('fk_loan_records_user_id_fk_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_loan_records'))
    )
    with op.batch_alter_table('loan_records', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loan_records_mold_id_fk'), ['mold_id_fk'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_records_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_loan_records_user_id_fk'), ['user_id_fk'], unique=False)

    op.create_table('maintenance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mold_id_fk', sa.Integer(), nullable=False),
    sa.Column('user_id_fk', sa.Integer(), nullable=False),
    sa.Column('maintenance_type', sa.String(length=50), nullable=False),
    sa.Column('maintenance_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mold_id_fk'], ['molds.id'], name=op.f('fk_maintenance_records_mold_id_fk_molds')),
    sa.ForeignKeyConstraint(['user_id_fk'], ['users.id'], name=op.f('fk_maintenance_records_user_id_fk_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_maintenance_records'))
    )
    with op.batch_alter_table('maintenance_records', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_maintenance_records_mold_id_fk'), ['mold_id_fk'], unique=False)
        batch_op.create_index(batch_op.f('ix_maintenance_records_user_id_fk'), ['user_id_fk'], unique=False)

    op.create_table('parts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('part_number', sa.String(length=100), nullable=False),
    sa.Column('part_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('stock_quantity', sa.Integer(), nullable=False),
    sa.Column('safe_stock_level', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('mold_id_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mold_id_fk'], ['molds.id'], name=op.f('fk_parts_mold_id_fk_molds')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parts'))
    )
    with op.batch_alter_table('parts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_parts_mold_id_fk'), ['mold_id_fk'], unique=False)
        batch_op.create_index(batch_op.f('ix_parts_part_number'), ['part_number'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('parts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_parts_part_number'))
        batch_op.drop_index(batch_op.f('ix_parts_mold_id_fk'))

    op.drop_table('parts')
    with op.batch_alter_table('maintenance_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_maintenance_records_user_id_fk'))
        batch_op.drop_index(batch_op.f('ix_maintenance_records_mold_id_fk'))

    op.drop_table('maintenance_records')
    with op.batch_alter_table('loan_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loan_records_user_id_fk'))
        batch_op.drop_index(batch_op.f('ix_loan_records_status'))
        batch_op.drop_index(batch_op.f('ix_loan_records_mold_id_fk'))

    op.drop_table('loan_records')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('molds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_molds_status'))
        batch_op.drop_index(batch_op.f('ix_molds_mold_id'))

    op.drop_table('molds')
    # ### end Alembic commands ###
